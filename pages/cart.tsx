import { NextPage } from 'next'
import Head from 'next/head'
import {
  Container,
  Box,
  Stack,
  Heading,
  Flex,
  HStack,
  Link,
} from '@chakra-ui/layout'
import { useColorModeValue } from '@chakra-ui/color-mode'
import { CartItem } from '../components/CartItem'
import { CartOrderSummary } from '../components/CartOrderSummary'
import { useContext } from 'react'
import ShopContext from '../context/ShopContext'
import { useToast } from '@chakra-ui/toast'
import NextLink from 'next/link'
import { getTotalQuantity } from '../helpers'

const Cart: NextPage = () => {
  const { cart, removeProductFromCart, changeProductQuantityFromCart } =
    useContext(ShopContext)

  const toast = useToast()

  const handleOnClickDelete = (id: string) => {
    try {
      removeProductFromCart(id)
      toast({
        title: 'Producto eliminado',
        description: 'El producto ha sido eliminado de tu carrito',
        status: 'info',
        duration: 9000,
        isClosable: true,
        position: 'bottom-right',
      })
    } catch (error) {
      toast({
        title: 'Error',
        description: 'No se pudo eliminar el producto',
        status: 'error',
        duration: 9000,
        isClosable: true,
        position: 'bottom-right',
      })
    }
  }

  const handleOnClickChangeQuantity = (id: string, quantity: number) => {
    try {
      changeProductQuantityFromCart(id, quantity)
    } catch (error) {
      toast({
        title: 'Error',
        description: 'No se pudo cambiar la cantidad del producto',
        status: 'error',
        duration: 9000,
        isClosable: true,
        position: 'bottom-right',
      })
    }
  }

  return (
    <>
      <Head>
        <title>Alternative Freshly Cosmetics - Cart</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container maxW="container.xl">
        <Box
          maxW={{ base: '3xl', lg: '7xl' }}
          mx="auto"
          px={{ base: '8', md: '12' }}
          py={{ base: '8', md: '12' }}
        >
          <Stack
            direction={{ base: 'column', lg: 'row' }}
            align={{ lg: 'flex-start' }}
            spacing={{ base: '8', md: '16' }}
          >
            <Stack spacing={{ base: '8', md: '10' }} flex="2">
              <Heading fontSize="2xl" fontWeight="extrabold">
                Carrito de la compra - ({getTotalQuantity(cart)} items)
              </Heading>

              <Stack spacing="6">
                {cart.map((item, index) => (
                  <CartItem
                    key={index}
                    {...item}
                    onClickDelete={() => handleOnClickDelete(item.id)}
                    onChangeQuantity={(quantity) =>
                      handleOnClickChangeQuantity(item.id, quantity)
                    }
                  />
                ))}
              </Stack>
            </Stack>
            <Flex direction="column" align="center" flex="1">
              <CartOrderSummary />
              <HStack mt="6" fontWeight="semibold">
                <NextLink href="/" passHref>
                  <Link color={useColorModeValue('blue.500', 'blue.200')}>
                    Continua con la compra
                  </Link>
                </NextLink>
              </HStack>
            </Flex>
          </Stack>
        </Box>
      </Container>
    </>
  )
}

export default Cart
